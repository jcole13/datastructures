package main;

public class Queue {

	Node front, back;
	int length;

	public Queue(int size) {
		length = size;

	}

	public Queue() {
		length = 0;
	}

	public void join(Object p){
		Node temp = new Node(p);	
		if(isEmpty()){
			back = temp;
			front = back; length++; //philosophically it feels better
		}
		else{
			back .setNext(temp); 
			back = back.getNext();
			length++;
		}
		front = new Node(p);
		back = front;
		length++;
	}

	public Object leave() { // assumes unlimited data
		if (isEmpty())
			throw new StackEmptyException();// TODO make a new Exception
		Object temp = front.getData();
		if(--length!=0)front = front.getNext();
		return temp;
	}
	
	public Object look() {
		return front;
	}

	public boolean isEmpty() {
		return length == 0;
	}
}
