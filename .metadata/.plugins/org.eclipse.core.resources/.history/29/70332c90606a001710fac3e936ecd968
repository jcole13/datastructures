package main;

public class LList {
	GraphNode label;
	Node header, back;
	int length;
	
	public LList() {
		label = null;
		header = new Node();
		length = 0;
	}
	
	public LList(GraphNode o) {
		label = o;
		header = new Node();
		length = 0;
	}
	
	public void append(Object p){
		if(isEmpty()) {
			Node temp = new Node(p);
			header.setNext(temp);
			temp.setPrevious(header);
			back = header.getNext();
			length++;
			
		}
		else{
			Node temp = new Node(p);
			back.setNext(temp);
			temp.setPrevious(back);
			back = back.getNext();
			length++;
		}

	}
	
	public GraphNode getLabel() {
		return label;
	}
	public boolean isEmpty(){ 
		return this.length == 0;
	}
	
	public Node adjfind(GraphNode n) { //use for adjacency list
		Node i = header.getNext();
		System.out.println(i.toString());
		while(i != null && !(((LList) i.getData()).getLabel().equals(n))){
			if(((LList) i.getData()).getLabel().equals(n)) {
				System.out.println("Found");
				return i;
			}
			i = i.getNext();
		}
		return null;
	}
	
	public Node regFind(GraphNode n) {
		Node i = header.getNext();
		while(i != null && !(((GraphNode) i.getData()).equals(n))){
			if((((GraphNode) i.getData()).equals(n))) return i;
			i = i.getNext();
		}
		return null;
		
	}
	
	public String toString() {
		return label.toString();
	}
	
	
	
}
